/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package views;

import DomainModels.NhanVien;
import Service.Impl.NhanVienServiceImpl;
import ViewModel.NhanVienViewModel;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author giang
 */
public class pnNhanVien extends javax.swing.JFrame {
    private DefaultTableModel dtm = new DefaultTableModel();
    private NhanVienServiceImpl service = new NhanVienServiceImpl();
    ArrayList<NhanVienViewModel> list = new ArrayList<>();
    /** Creates new form NVV */
    public pnNhanVien() {
        initComponents();
    }
        public void getDta(ArrayList<NhanVienViewModel> list) {
        dtm = (DefaultTableModel) tbl_nhanVien.getModel();
        dtm.setRowCount(0);
        for (NhanVienViewModel nv : list) {
            dtm.addRow(new Object[]{
                nv.getId(),
                nv.getMaNv(),
                nv.getHoTen(),
                nv.getGioiTinh(),
                nv.getNgaySinh(),
                nv.getSdt(),
                nv.getCccd(),
                nv.getDiaChi(),
                nv.getEmail(),
                nv.getChucVu(),
                nv.getTrangThai() == 0 ? "Đang làm việc" : "Nghỉ việc"
            });

        }
    }
    
    public void Clear(){
        lbID2.setText("");
        lbMaNV.setText("");
        txtHoTen.setText("");
        txtNgaySinh.setText("");
        txtSDT.setText("");
        txtCCCD.setText("");
        txtDiaChi.setText("");
        txtEmail.setText("");
        cbbChucVu.setSelectedIndex(0);
        rdoNam.setSelected(true);
        rdoDangLamViec.setSelected(true);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_nhanVien = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btnTim = new javax.swing.JButton();
        txttim = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbMaNV = new javax.swing.JLabel();
        btnAddNhanVien = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbChucVu = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        rdoNghiViec = new javax.swing.JRadioButton();
        rdoDangLamViec = new javax.swing.JRadioButton();
        txtDiaChi = new javax.swing.JTextField();
        lbID2 = new javax.swing.JLabel();
        lbID3 = new javax.swing.JLabel();
        excel = new javax.swing.JTextField();
        btndoc = new javax.swing.JButton();
        btnin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        tbl_nhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Mã NV", "Họ Tên", "Giới Tính", "Ngày Sinh", "SĐT", "CCCD", "Địa chỉ", "Email", "Chức vụ", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_nhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_nhanVienMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_nhanVien);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Tìm tên nhân viên");

        btnTim.setBackground(new java.awt.Color(204, 204, 204));
        btnTim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTim.setText("Tìm Kiếm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        txttim.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txttimCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel9)
                        .addGap(27, 27, 27)
                        .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTim))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnTim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setText("Họ & Tên nhân viên:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel4.add(txtHoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 256, -1));

        jLabel11.setText("Mã nhân viên:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, -1, -1));

        jLabel13.setText("ID:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 34, -1, -1));
        jPanel4.add(lbMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 256, 22));

        btnAddNhanVien.setText("Thêm");
        btnAddNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNhanVienActionPerformed(evt);
            }
        });
        jPanel4.add(btnAddNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        btnClear.setText("Mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel4.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        jLabel1.setText("Số điện thoại:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));
        jPanel4.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 256, -1));

        jLabel2.setText("Giới tính:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        rdoNam.setText("Nam");
        jPanel4.add(rdoNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

        rdoNu.setText("Nữ");
        jPanel4.add(rdoNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        jLabel3.setText("CCCD: ");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, -1, -1));
        jPanel4.add(txtCCCD, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, 301, -1));

        jLabel4.setText("Trạng thái:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, -1, -1));

        jLabel5.setText("Chức vụ:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, -1, -1));

        cbbChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhân viên", "Quản lý" }));
        cbbChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbChucVuActionPerformed(evt);
            }
        });
        jPanel4.add(cbbChucVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 301, -1));

        jLabel6.setText("Địa chỉ:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, -1, -1));

        jLabel7.setText("Email:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, -1, -1));
        jPanel4.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 301, -1));

        jLabel8.setText("Ngày sinh:");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
        jPanel4.add(txtNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 256, -1));

        rdoNghiViec.setText("Nghỉ việc");
        jPanel4.add(rdoNghiViec, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 160, -1, -1));

        rdoDangLamViec.setText("Đang làm việc");
        rdoDangLamViec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDangLamViecActionPerformed(evt);
            }
        });
        jPanel4.add(rdoDangLamViec, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));
        jPanel4.add(txtDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 301, -1));
        jPanel4.add(lbID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 31, 256, 22));
        jPanel4.add(lbID3, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 31, 256, 22));
        jPanel4.add(excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 230, 190, -1));

        btndoc.setText("Import");
        btndoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndocActionPerformed(evt);
            }
        });
        jPanel4.add(btndoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, -1, -1));

        btnin.setText("Export");
        btnin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninActionPerformed(evt);
            }
        });
        jPanel4.add(btnin, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, 70, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_nhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_nhanVienMouseClicked
        // TODO add your handling code here:
        int row = tbl_nhanVien.getSelectedRow();

        lbID2.setText(tbl_nhanVien.getValueAt(row, 0).toString());
        lbMaNV.setText(tbl_nhanVien.getValueAt(row, 1).toString());
        txtHoTen.setText(tbl_nhanVien.getValueAt(row, 2).toString());
        String gioiTinh = this.tbl_nhanVien.getValueAt(row, 3).toString();
        txtNgaySinh.setText(tbl_nhanVien.getValueAt(row, 4).toString());
        txtSDT.setText(tbl_nhanVien.getValueAt(row, 5).toString());
        txtCCCD.setText(tbl_nhanVien.getValueAt(row, 6).toString());
        txtDiaChi.setText(tbl_nhanVien.getValueAt(row, 7).toString());
        txtEmail.setText(tbl_nhanVien.getValueAt(row, 8).toString());
        cbbChucVu.setSelectedItem(tbl_nhanVien.getValueAt(row, 9).toString());
        String trangThai = this.tbl_nhanVien.getValueAt(row, 10).toString();

        if (trangThai.equalsIgnoreCase("Đang Làm Việc")) {
            rdoDangLamViec.setSelected(true);
        } else if (trangThai.equalsIgnoreCase("Nghỉ việc")) {
            rdoNghiViec.setSelected(true);
        }

        if (gioiTinh.equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
        } else if (gioiTinh.equalsIgnoreCase("Nữ")) {
            rdoNu.setSelected(true);
        }

    }//GEN-LAST:event_tbl_nhanVienMouseClicked

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        String hoten = txttim.getText();
        ArrayList<NhanVienViewModel>  kq = service.sreach(hoten);
        getDta(kq);
    }//GEN-LAST:event_btnTimActionPerformed

    private void txttimCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txttimCaretUpdate

    }//GEN-LAST:event_txttimCaretUpdate

    private void btnAddNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNhanVienActionPerformed
        if (txtDiaChi.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống địa chỉ");
            return;
        }
        if (txtSDT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống số điện thoại");
            return;
        }
        if (txtHoTen.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống tên");
            return;
        }
        if (txtNgaySinh.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống ngày sinh");
            return;
        }
        if (txtCCCD.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống CCCD");
            return;
        }
        if (txtEmail.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống ngày Email");
            return;
        }
        NhanVien nv = new NhanVien();
        nv.setHoTen(txtHoTen.getText());
        nv.setNgaySinh(txtNgaySinh.getText());
        if (rdoNam.isSelected()) {
            nv.setGioiTinh("Nam");
        } else {
            nv.setGioiTinh("Nữ");
        }
        if (txtSDT.getText().matches("^0\\d{9,10}")) {
            nv.setSdt(txtSDT.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Số điện thoại nhập chưa đúng");
            return;
        }
        nv.setCccd(txtCCCD.getText());
        nv.setDiaChi(txtDiaChi.getText());
        nv.setEmail(txtEmail.getText());
        if (rdoDangLamViec.isSelected()) {
            nv.setTrangThai(0);
        } else {
            nv.setTrangThai(1);
        }
        nv.setChucVu(String.valueOf(cbbChucVu.getSelectedItem()));

        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?");
        if (xacNhan == 0) {

            service.them(nv);
            JOptionPane.showMessageDialog(this, "Thêm thành công");
            getDta(service.getAll());
            Clear();

        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại");
        }
    }//GEN-LAST:event_btnAddNhanVienActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtDiaChi.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống địa chỉ");
            return;
        }
        if (txtSDT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống số điện thoại");
            return;
        }
        if (txtHoTen.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống tên");
            return;
        }
        if (txtNgaySinh.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống ngày sinh");
            return;
        }
        if (txtCCCD.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống CCCD");
            return;
        }
        if (txtEmail.getText() == null) {
            JOptionPane.showMessageDialog(this, "Không để trống ngày Email");
            return;
        }
        String id = lbID2.getText();
        NhanVien nv = new NhanVien();
        nv.setHoTen(txtHoTen.getText());
        nv.setNgaySinh(txtNgaySinh.getText());
        if (rdoNam.isSelected()) {
            nv.setGioiTinh("Nam");
        } else {
            nv.setGioiTinh("Nữ");
        }
        if (txtSDT.getText().matches("^0\\d{9,10}")) {
            nv.setSdt(txtSDT.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Số điện thoại nhập chưa đúng");
            return;
        }
        nv.setCccd(txtCCCD.getText());
        nv.setDiaChi(txtDiaChi.getText());
        nv.setEmail(txtEmail.getText());
        if (rdoDangLamViec.isSelected()) {
            nv.setTrangThai(0);
        } else {
            nv.setTrangThai(1);
        }
        nv.setChucVu(String.valueOf(cbbChucVu.getSelectedItem()));

        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa không?");
        if (xacNhan == 0) {

            service.update(nv, id);
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            getDta(service.getAll());
            Clear();

        } else {
            JOptionPane.showMessageDialog(this, "Sửa thất bại");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = lbID2.getText();
        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
        if (xacNhan == 0) {

            service.delete(id);
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            getDta(service.getAll());
            Clear();

        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        Clear();
        getDta(service.getAll());
    }//GEN-LAST:event_btnClearActionPerformed

    private void cbbChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbChucVuActionPerformed

    }//GEN-LAST:event_cbbChucVuActionPerformed

    private void rdoDangLamViecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDangLamViecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDangLamViecActionPerformed

    private void btninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninActionPerformed
        // TODO add your handling code here:
        try
        {
            XSSFWorkbook wordkbook = new XSSFWorkbook();
            XSSFSheet sheet=wordkbook.createSheet("danhsach");
            XSSFRow row =null;
            Cell cell=null;
            //        row=sheet.createRow(0);
            //        cell=row.createCell(0,CellType.STRING);
            //        cell.setCellValue("DANH SACH KHACH HANG");
            //
            //        row=sheet.createRow(1);
            //        cell=row.createCell(0,CellType.STRING);
            //        cell.setCellValue("STT");
            //
            //        cell=row.createCell(1,CellType.STRING);
            //        cell.setCellValue("ID");
            //
            //        cell=row.createCell(2,CellType.STRING);
            //        cell.setCellValue("MA");
            //
            //        cell=row.createCell(3,CellType.STRING);
            //        cell.setCellValue("HOTEN");
            //
            //        cell=row.createCell(4,CellType.STRING);
            //        cell.setCellValue("NGAYSINH");
            //
            //        cell=row.createCell(5,CellType.STRING);
            //        cell.setCellValue("GIOITINH");
            //
            //        cell=row.createCell(6,CellType.STRING);
            //        cell.setCellValue("SDT");
            //
            //        cell=row.createCell(7,CellType.STRING);
            //        cell.setCellValue("DIACHI");
            //
            //        cell=row.createCell(8,CellType.STRING);
            //        cell.setCellValue("EMAIL");

            list = service.getAll();
            for(int i=0; i<list.size(); i++)
            {
                //Modelbook book =arr.get(i);
                row=sheet.createRow(i);

                cell=row.createCell(0,CellType.NUMERIC);
                cell.setCellValue(i+1);

                cell=row.createCell(1,CellType.STRING);
                cell.setCellValue(list.get(i).getId().toString());

                cell=row.createCell(2,CellType.STRING);
                cell.setCellValue(list.get(i).getMaNv());

                cell=row.createCell(3,CellType.STRING);
                cell.setCellValue(list.get(i).getHoTen());

                cell=row.createCell(4,CellType.STRING);
                cell.setCellValue(list.get(i).getGioiTinh());
                
                cell=row.createCell(5,CellType.STRING);
                cell.setCellValue(list.get(i).getNgaySinh());
              

                cell=row.createCell(6,CellType.STRING);
                cell.setCellValue(list.get(i).getSdt());
                
                cell=row.createCell(7,CellType.STRING);
                cell.setCellValue(list.get(i).getCccd());

                cell=row.createCell(8,CellType.STRING);
                cell.setCellValue(list.get(i).getDiaChi());

                cell=row.createCell(9,CellType.STRING);
                cell.setCellValue(list.get(i).getEmail());
                
                cell=row.createCell(10,CellType.STRING);
                cell.setCellValue(list.get(i).getChucVu());
                
                cell=row.createCell(11,CellType.STRING);
                cell.setCellValue(list.get(i).getTrangThai());
            }

            File f = new File("D://danhsachNV.xlsx");
            try
            {
                FileOutputStream fis = new FileOutputStream(f);
                wordkbook.write(fis);
                fis.close();
            }
            catch (FileNotFoundException ex) {
                ex.printStackTrace();

            }
            catch (IOException ex)
            {
                ex.printStackTrace();
            }

            JOptionPane.showMessageDialog(this, "in thanh cong D:\\danhsach");

        }

        catch(Exception ex)
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Loi mo file");
        }
    }//GEN-LAST:event_btninActionPerformed

    private void btndocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndocActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model= (DefaultTableModel) tbl_nhanVien.getModel();
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportToJTable = null;
        String defaultCurrentDirectoryPath = "D:";
        JFileChooser excelFileChooser = new JFileChooser(defaultCurrentDirectoryPath);
        excelFileChooser.setDialogTitle("Select Excel File");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            dtm.setRowCount(0);
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excel.setText(excelFile.toString());
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportToJTable = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportToJTable.getSheetAt(0);
                for (int row = 0; row < excelSheet.getLastRowNum(); row ++) {
                    XSSFRow excelRow = excelSheet.getRow(row);
                    XSSFCell excelLineNum = excelRow.getCell(1);
                    XSSFCell excelItemName = excelRow.getCell(2);
                    XSSFCell excelDescription = excelRow.getCell(3);
                    XSSFCell excelServiceDuration = excelRow.getCell(4);
                    XSSFCell excelQuantity = excelRow.getCell(5);
                    XSSFCell excelQuantity1 = excelRow.getCell(6);
                    XSSFCell excelQuantity2 = excelRow.getCell(7);
                    XSSFCell excelQuantity3 = excelRow.getCell(8);
                    XSSFCell excelQuantity4 = excelRow.getCell(9);
                    XSSFCell excelQuantity5= excelRow.getCell(10);
                    XSSFCell excelQuantity6 = excelRow.getCell(11);
                    model.addRow(new Object[]{excelLineNum, excelItemName, excelDescription, excelServiceDuration,excelQuantity,excelQuantity1,excelQuantity2,excelQuantity3,excelQuantity4,excelQuantity5,excelQuantity6});
                }
                JOptionPane.showMessageDialog(null, "Imported Successfully !!.....");
            } catch (IOException iOException) {
                JOptionPane.showMessageDialog(null, iOException.getMessage());
            } finally {
                try {
                    if (excelFIS != null) {
                        excelFIS.close();
                    }
                    if (excelBIS != null) {
                        excelBIS.close();
                    }
                    if (excelImportToJTable != null) {
                        excelImportToJTable.close();
                    }
                } catch (IOException iOException) {
                    JOptionPane.showMessageDialog(null, iOException.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btndocActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNhanVien;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btndoc;
    private javax.swing.JButton btnin;
    private javax.swing.JComboBox<String> cbbChucVu;
    private javax.swing.JTextField excel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbID2;
    private javax.swing.JLabel lbID3;
    private javax.swing.JLabel lbMaNV;
    private javax.swing.JRadioButton rdoDangLamViec;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNghiViec;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tbl_nhanVien;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txttim;
    // End of variables declaration//GEN-END:variables

}
